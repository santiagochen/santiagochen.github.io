{"componentChunkName":"component---src-templates-post-post-jsx","path":"/blog/elegant-nodejs-server","result":{"data":{"markdownRemark":{"html":"<h2>目录</h2>\n<ul>\n<li><a href=\"#%E5%89%8D%E8%A8%80:%E6%88%91%E4%BB%AC%E7%BB%8F%E5%B8%B8%E9%81%87%E5%88%B0%E4%B8%80%E4%BA%9B%E5%9C%BA%E6%99%AF\">前言:我们经常遇到一些场景</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85\">如何优雅</a></li>\n<li><a href=\"#%E4%B8%BE%E4%BE%8B%E5%AE%9E%E7%8E%B0\">举例实现</a></li>\n</ul>\n<hr>\n<h3>前言:我们经常遇到一些场景</h3>\n<ol>\n<li>写了个项目，隔了一周时间，再去回忆时，发现代码逻辑晦涩难懂(因为业务逻辑可能有些模糊了)</li>\n<li>代码又臭又长，很不利于观察整体逻辑，一眼看到的基本上都是局部</li>\n<li>逻辑模块混杂，业务耦合严重，相互交织，难于维护</li>\n</ol>\n<h3>如何优雅(像一个大树一样生长(coding))</h3>\n<ol>\n<li>入口清晰，定义简练</li>\n<li>注意功能模块区分清晰</li>\n<li>服务入口结构清晰 app.js</li>\n<li>调用链路简单纯粹: 路由->(局部中间件)->控制器模块(+工具模块，+数据模块，+配置模块实现业务逻辑)</li>\n<li>\n<p>模块分工明确</p>\n<ul>\n<li>路由模块: 定义路由</li>\n<li>中间件模块: 定义中间件</li>\n<li>工具模块: 定义辅助方法</li>\n<li>控制器模块: 定义业务实现，可能涉及引用周边一些模块</li>\n<li>数据模块: 定义数据查询</li>\n<li>配置模块: 定义全局数据常量</li>\n</ul>\n</li>\n<li>注意全局常量只在配置模块中定义，业务中使用需引用配置</li>\n<li>注意抽象通用方法，归纳与工具模块 </li>\n</ol>\n<h3>举例实现</h3>\n<p>show code之前，我们想要的是尽可能让调用链清晰，简单化; 所以我们理论上应该在实现的过程中首先做到功能模块分类明确；另外关于调用我们也可以假设它就是一棵树干，主干是最粗的，一眼清晰可见，如果需要了解细节，又能够通过树干的分支逐一梳理。其实这样和我们的国家职能模块的设置一样：我们国家有省，省下有市，我们在某个地方遇到具体问题时，怎可以顺着区域划分，职能管辖找到当地的某个负责部门(因为他们就准备负责干某件事)去寻求帮助，平时我们却不用关注他们具体是干什么的。</p>\n<p>于是，我们就想象着一棵树的样子(一眼望去主干清晰，顺着枝干去梳理，又能发现其枝繁叶茂，一层层拨开了看，才能逐步去了解每个枝干的细节)去实现一个项目即可, 下面我们借助koa-booster去实现这样一个项目。</p>\n<ul>\n<li>\n<p>安装</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -g koa-booster-cli</code></pre></div>\n</li>\n<li>\n<p>创建项目和启动</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kb create kb-demo \ncd kb-demo\nnpm i\nnode app</code></pre></div>\n</li>\n<li>\n<p>入口\n我们就实例化一个koa, 加入一些全局的要素，例如全局中间件</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const Koa = require(&#39;koa&#39;)\nconst app = new Koa()\nmodule.exports = require(&#39;koa-booster&#39;)(app, {\nmiddlewares : app=&gt;[\nrequire(&#39;koa-body&#39;)(),\nrequire(&#39;koa-static&#39;)(&#39;public&#39;),\n]\n})</code></pre></div>\n<p>默认127.0.0.1:3000, 需要自定义时就定义一下端口和host, 像这样</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = require(&#39;koa-booster&#39;)(app, {\nhost: &#39;0.0.0.0&#39;,\nport: 5001,\nmiddlewares : app=&gt;[\nrequire(&#39;koa-body&#39;)(),\nrequire(&#39;koa-static&#39;)(&#39;public&#39;),\n]\n})</code></pre></div>\n</li>\n<li>路由 全部归纳在router这个文件夹中\n实现简单，文件名为index则路由前缀为/; 如果为user, 则该文件所实现的路由前缀都为/user; 具体文件内容就如下</li>\n<li>命令行新建 <code class=\"language-text\">kb generate router {路由名称}</code></li>\n<li>\n<p>实现</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = (app) =&gt;{\nconst { router, controller, middlewares } = app\n//router.use(middlewares[&#39;your-custom-middleware&#39;]()) 挂载一个该路由/下所有相关路由的中间件\nrouter.get(&#39;/&#39;,  controller.demo.t1 ) \nrouter.get(&#39;/:id&#39;, middlewares.m2(), controller.demo.t2 ) //挂载一个该路由/:id下的中间件\n}</code></pre></div>\n<p>这里每个模块文件都可以基于函数模式传入一个app, 即:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = (app) =&gt;{ \n//这里面就能引用这个app\n//app中包含了我们希望几个功能模块: router, controller, service, middlewares, utils, config\nconst { router, controller, service, middlewares, utils, config } = app\n}</code></pre></div>\n</li>\n<li>\n<p>中间件</p>\n<ul>\n<li>命令行新建 <code class=\"language-text\">kb generate middlewares {中间件名称}</code></li>\n<li>\n<p>实现</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = (options)=&gt;{\nreturn async (ctx, next)=&gt;{\n... //这里实现该管道的一些逻辑\nawait next()\n}\n}</code></pre></div>\n</li>\n<li>\n<p>引用</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app.use( app.middlewares[&#39;your-custom-middleware&#39;]() )</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>控制器 业务实现代码就在这里了(理论情况下，我们希望的是只有这里才会实现业务相关的代码，其它模块中实现的应该都是原子功能的，都是抽象的，可复用的内容，这一点很重要！因为它会让我们的代码组织的如同树干一样干净，强壮) 例如: </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = (app)=&gt;({\nasync t1(ctx){\ntry {\n  let data = await ctx.service.demo.t1()\n  ctx.body = {\n    globalMidName:ctx.globalMidName,\n    privateMidName: ctx.privateMidName,\n    classGrp: data\n  }\n} catch (error) {\n  console.error(error)\n}\n}\n})</code></pre></div>\n<p>在控制器里面我们除了能在app下获取到router, controller, service, middlewares, utils, config这几个模块；我们还能通基于ctx来获取。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = (app) =&gt;{ \nconst { router, controller, service, middlewares, utils, config } = app\nasync t1(ctx){\ntry {\n  const { router, controller, service, middlewares, utils, config } = ctx\n} catch (error) {\n  console.error(error)\n}\n}\n}</code></pre></div>\n</li>\n</ul>\n<p>这里的实现我们就特别注意下面几件事, 因为这样做会让我们的代码更可读，更合理！</p>\n<ul>\n<li>\n<p>抽象提炼公共方法, 放置于utils内。 关于utils的实现:</p>\n<ul>\n<li>utils文件夹内的文件则为utils的子集</li>\n<li>命令行新建 <code class=\"language-text\">kb generate utils common</code></li>\n<li>\n<p>实现代码如下: </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = ()=&gt;require(&#39;underscore&#39;) //直接引用了underscore</code></pre></div>\n</li>\n<li>引用 <code class=\"language-text\">app.utils.common.pluck()</code></li>\n<li>当然你也可以自定义成一个方法集</li>\n<li>命令行新建 <code class=\"language-text\">kb generate utils helper</code></li>\n<li>\n<p>实现</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const _ = require(&#39;underscore&#39;)\nmodule.exports = (app)=&gt;({\ngetClassById(id){\nreturn _.findWhere( app.config.classInfo, { id: id } )\n}\n})</code></pre></div>\n</li>\n<li>那么引用时则可以这样 <code class=\"language-text\">app.utils.helper.getClassById(...)</code></li>\n</ul>\n</li>\n<li>\n<p>提取公共配置, 放置于config内。关于config的实现:</p>\n<ul>\n<li>\n<p>实现</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = {\n...\n}</code></pre></div>\n</li>\n<li>\n<p>引用</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app.config[field]</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>抽象出来的原子数据方法，与数据打交道的，抽象出来都放这里, 放置于service内。关于service的实现:</p>\n<ul>\n<li>命令行新建 <code class=\"language-text\">kb generate service user</code></li>\n<li>\n<p>实现</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = (app)=&gt;({\nget(userId){\nreturn app.config.db.query( &quot;select * from user where id = :userId&quot;, [ userId ] )\n}\n})</code></pre></div>\n</li>\n<li>引用时 <code class=\"language-text\">const userInfo = await app.service.user.get(...)</code></li>\n</ul>\n</li>\n</ul>","timeToRead":5,"frontmatter":{"title":"如何更加优雅的实现一个nodejs后台","date":"18 Oct 2021","tags":["nodejs"],"path":"blog/elegant-nodejs-server","excerpt":"更加优雅的实现一个nodejs后台","cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='288'%20viewBox='0%200%20400%20288'%20preserveAspectRatio='none'%3e%3cpath%20d='M190%20103c-4%201-13%209-15%2011-2%203-1%2051%201%2054%202%202%2021%208%2026%208%204%200%209-3%2011-5l3-2%205-3%203-3v-26l-1-27-27-9-6%202m2%2075l-10%205c-6%205-7%205-7%2010-1%206-1%206%2013%209%2015%204%2018%204%2028-2l8-4v-5c0-5%200-6-3-8-6-4-21-6-29-5'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.3888888888888888,"src":"/static/9757369cb7d5b643993b7f059d41e2c1/a7715/placeholder.jpg","srcSet":"/static/9757369cb7d5b643993b7f059d41e2c1/8f7df/placeholder.jpg 250w,\n/static/9757369cb7d5b643993b7f059d41e2c1/0f3a1/placeholder.jpg 500w,\n/static/9757369cb7d5b643993b7f059d41e2c1/a7715/placeholder.jpg 1000w,\n/static/9757369cb7d5b643993b7f059d41e2c1/7f945/placeholder.jpg 1440w","sizes":"(max-width: 1000px) 100vw, 1000px"}}}}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"path":"blog/k8s","title":"k8s","tags":["运维"],"excerpt":"运维","cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='400'%20viewBox='0%200%20400%20400'%20preserveAspectRatio='none'%3e%3cpath%20d='M185%2027A29429%2029429%200%200074%2080c-14%207-18%2010-20%2014-2%203-5%2016-11%2041l-21%2090c-4%2017-4%2023%200%2030%205%209%2091%20113%2095%20116%208%205%209%205%2087%205h73l4-3a2242%202242%200%200097-119c5-8%204-9-12-82l-18-73c-3-8-6-10-75-43l-66-32h-8c-7%200-9%200-14%203m8%2045c-2%203-2%204-2%208%203%2017%203%2019%202%2022l-2%205c-1%201-3%202-7%202-18%202-39%2012-53%2025-7%207-10%206-22-6-11-10-15-12-19-6-4%205-2%209%2011%2018%208%204%2011%206%2012%2010l2%204-3%205c-9%2015-13%2033-13%2052l-1%2013-4%203c-2%202-5%202-14%203-14%202-17%204-17%2010%200%208%206%209%2020%203%2014-4%2020-4%2022%202%206%2017%2021%2037%2038%2049%205%203%205%203%205%208-1%205-1%206-8%2017-6%209-6%2013-3%2017%206%205%2012%201%2017-13%202-8%204-11%207-15l4-3%206%202c16%206%2037%206%2057%201%208-2%208-2%2010%200%203%202%207%209%2010%2017%203%2011%209%2015%2014%2011%206-4%205-7-4-21-8-12-8-16-1-21%2016-10%2035-35%2039-50%201-4%208-5%2018-2%2013%205%2016%206%2019%204%204-2%204-4%204-7-1-4-5-6-16-8-21-2-21-3-21-19%200-19-4-35-13-51-3-7-3-6%200-13l17-12c8-5%209-14%202-16-4-2-7%200-17%209l-11%209-4%201c-1%201-2%200-7-4-14-13-35-23-53-26-4%200-6-1-6-2l-2-4V91c2-15%201-17-1-20-4-3-8-3-12%201m-15%2060c-13%204-36%2018-34%2021%201%202%2034%2025%2036%2025%205%200%207-3%207-19l2-22c0-8%201-8-11-5m31%203a455%20455%200%20013%2039c1%203%205%205%208%203l35-24c0-1-10-10-18-14-7-4-17-7-24-8l-4-1v5m-83%2042c-2%204-5%2010-5%2014-2%206-4%2028-3%2028l21-6c30-9%2031-9%208-30l-17-14-4%208m126%206c-17%2015-18%2017-16%2021%202%203%202%203%2025%2010l17%205c2%200%202%200%202-11l-3-18c-2-8-8-21-9-21l-16%2014m-63%2020l-4%205%201%206c2%205%202%206%207%209l6%203%206-3c5-3%206-4%207-9l1-6-4-5-3-5h-14l-3%205m41%2029c-5%203-5%205%204%2027l9%2020a81%2081%200%200032-40%20343%20343%200%2000-45-7m-87%203l-19%203c-3%202%207%2019%2016%2029l15%2012%208-19c13-30%2012-30-20-25m53%2014l-22%2039c7%205%2044%205%2049%200%201-1-16-33-19-37-3-2-5-3-8-2'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1,"src":"/static/6a347940f064146525be36b805414901/bc59e/k8s.png","srcSet":"/static/6a347940f064146525be36b805414901/6d161/k8s.png 150w,\n/static/6a347940f064146525be36b805414901/630fb/k8s.png 300w,\n/static/6a347940f064146525be36b805414901/bc59e/k8s.png 512w","sizes":"(max-width: 512px) 100vw, 512px"}}}}}},{"node":{"frontmatter":{"path":"blog/flask","title":"flask","tags":["悦读"],"excerpt":"悦读","cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='157'%20viewBox='0%200%20400%20157'%20preserveAspectRatio='none'%3e%3cpath%20d='M28%206c-2%202-1%203%201%206l2%203-3%203c-2%203-3%204-2%207%200%203%200%203-4%205-4%201-5%203-4%205l-3%203c-5%204-5%208-2%2016l5%2017c10%2040%2036%2070%2069%2078%2020%205%2048%205%2066%200l8-1c1%201%208-1%2014-3%205-2%200-7-5-6h-9c-2%201-16%200-16-1l2-3c5-6-1-7-7-1l-5%204-8-2c-16-4-28-12-38-24-14-17-16-24-18-54-2-20-2-20%208-17%205%201%208%201%206-2h-2v-1c3%200-1-2-8-5l-17-8-6-3c-5-2-6-2-6-4%200-3%200-3-5-3-4%200-5-1-5-4%200-6-5-8-8-5m166%207c-8%204-9%205-4%208s5%204%205%2038c0%2033%200%2031-6%2035-4%202%200%203%2013%203%2011%200%2013-1%2013-2l-4-3c-7-2-6%200-7-42V10c-1-1-2-1-10%203m140%200c-9%204-9%205-4%208%205%202%205%202%205%2036%200%2030%200%2033-4%2035l-3%203c0%202%200%202%2010%202a306%20306%200%200117-2c0-2-2-3-5-3-5%200-7-13-3-16s5-2%208%203l9%2011%205%207h8c11%200%2015-4%206-5-5-1-10-6-17-15-8-10-8-11-4-14%205-4%2010-7%2015-8%206-2%207-3%206-5-2-2-28-2-28%201l4%202c3%201%204%202%202%204-2%203-14%2012-15%2012l-1-28-1-30c0-3-3-2-10%202m-214%204l4%204c5%204%205%205%205%2039-1%2030-1%2031-6%2033-2%200-3%202-3%202%201%202%2031%202%2032%200l-3-3c-10-2-10-2-10-21l1-12h8c8%200%2010%201%2012%207l3%203c2-1%203-24%202-25-2-1-4%201-5%204-1%204-4%205-14%205-7%200-7%200-7-15%200-17-1-16%2012-16s15%201%2018%207c4%206%206%204%206-6l1-7h-28l-28%201M52%2034l-15%204c-10%203-9%202-7%208%201%202-3%201-6-2-2-2-5-2-8%201-2%201-3%206-1%207l1-2%202-4c1-2%204-1%202%201-1%201-1%201%202%203h4c1-2%202-2%204-2%203%201%205%201%208-1l13-4c15-2%2021-4%2021-8%200-2-1-2-6-2s-6%200-5%202l-1%202-2-2c0-2-1-2-6-1m9%2010c-4%201-5%202-5%203l-2%201h-3l-3%201-3%202-5%202c-3%200-3%200-3%202%202%205%202%206%200%207-5%201-8%207-3%207l2%201c1%201%205-2%204-3%200-2%202-1%203%201v1l-1%202-1%201c-2%200-2%201-2%204l-1%203c-1%200-2-3-1-5%200-3-2-4-4-2v4l2%203v2l3%204c2%203%202%203%204%202%201-1%201-2-1-3-3-2-4-4-2-4%201%200%202-1%201-2l1-2c1-1%201%200%201%202%200%203%200%203%202%201%203-1%203-1%204%201%203%203%202%204%200%204s-2%200%200%202l2%205c1%203%202%204%205%204l5%201h1l3%201%202%203-2%202c-2%202-2%202%200%203l3%202c2%200%205%204%205%206l-2%201c-2%200%200%201%205%204%209%204%2015%2010%2012%2011-3%200-5-1-5-2%201-1%200-1-1-1s-2%200-1%201c0%202%201%202%207%203%203%201%204%201%204%204%200%202%201%203%203%202l4%202%202%201%202-1h4c1-1%204%200%208%201%2010%203%2014%204%2016%203l-3-2-5-2-4-1-7-4-5-3c-4%200-11-6-14-11l-13-16c-4-4-5-5-4-6v-3l-2-9c-2-7-3-8-4-6h-1l2-3c1-1%201-1-1-2v-2c1-1%200-18-1-19l-1%201-1%203c-3%202-4-1-2-5%201-2%201-2%202%200s2-1%202-5c-1-4-1-4-7-3m234%204c-8%201-12%206-12%2014%200%206%202%208%2013%2014s13%208%2011%2012c-3%206-14%205-21-2-4-5-5-4-5%203%200%206%201%207%2015%208%2014%200%2021-4%2021-14%200-7-3-9-13-14-11-6-13-8-13-11%200-7%2015-6%2019%201%201%203%206%203%206%200l-2-5c0-3-1-4-2-5-4-1-13-2-17-1m-56%202c-7%203-12%207-12%209%201%206%208%205%2012-2%202-3%203-3%206-3%205%200%207%203%207%2010v5l-7%202c-16%205-21%208-21%2015%200%203%201%205%203%208%205%204%2010%204%2020%201l6-2%202%202c3%203%205%203%2010%200%207-3%208-8%202-7-5%201-5%201-5-18V54l-4-3c-4-4-12-4-19-1m5%2026c-7%202-9%204-9%209s6%208%2014%205c3-2%203-2%203-8%200-8-1-8-8-6'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":2.542372881355932,"src":"/static/6daa80cf53d6fb42b1d59e5410143ee6/cc5ae/flask-logo.png","srcSet":"/static/6daa80cf53d6fb42b1d59e5410143ee6/6d161/flask-logo.png 150w,\n/static/6daa80cf53d6fb42b1d59e5410143ee6/630fb/flask-logo.png 300w,\n/static/6daa80cf53d6fb42b1d59e5410143ee6/cc5ae/flask-logo.png 419w","sizes":"(max-width: 419px) 100vw, 419px"}}}}}},{"node":{"frontmatter":{"path":"blog/activity-component-builder","title":"活动组件开发实战总结","tags":["nodejs"],"excerpt":"项目总结","cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='288'%20viewBox='0%200%20400%20288'%20preserveAspectRatio='none'%3e%3cpath%20d='M190%20103c-4%201-13%209-15%2011-2%203-1%2051%201%2054%202%202%2021%208%2026%208%204%200%209-3%2011-5l3-2%205-3%203-3v-26l-1-27-27-9-6%202m2%2075l-10%205c-6%205-7%205-7%2010-1%206-1%206%2013%209%2015%204%2018%204%2028-2l8-4v-5c0-5%200-6-3-8-6-4-21-6-29-5'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.3888888888888888,"src":"/static/9757369cb7d5b643993b7f059d41e2c1/4fe8c/placeholder.jpg","srcSet":"/static/9757369cb7d5b643993b7f059d41e2c1/aabdf/placeholder.jpg 150w,\n/static/9757369cb7d5b643993b7f059d41e2c1/9dc27/placeholder.jpg 300w,\n/static/9757369cb7d5b643993b7f059d41e2c1/4fe8c/placeholder.jpg 600w,\n/static/9757369cb7d5b643993b7f059d41e2c1/9842e/placeholder.jpg 900w,\n/static/9757369cb7d5b643993b7f059d41e2c1/47498/placeholder.jpg 1200w,\n/static/9757369cb7d5b643993b7f059d41e2c1/7f945/placeholder.jpg 1440w","sizes":"(max-width: 600px) 100vw, 600px"}}}}}},{"node":{"frontmatter":{"path":"blog/scrapy","title":"scrapy.com","tags":["悦读"],"excerpt":"悦读","cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='124'%20viewBox='0%200%20400%20124'%20preserveAspectRatio='none'%3e%3cpath%20d='M51%204A61%2061%200%20006%2082c17%2042%2067%2054%2099%2023C141%2068%20117%205%2065%203L51%204m-5%207a54%2054%200%201065%2028%2054%2054%200%2000-65-28m113%2017c-5%202-7%204-9%208-5%209-2%2015%2011%2029%2012%2012%2013%2015%2011%2021-3%206-12%207-20%202-2-1-2-1-3%202-3%204-2%206%201%208%2010%206%2028%202%2033-7%205-11%203-18-11-31-13-14-15-20-8-24%203-1%204-1%2014%201%205%201%207-6%202-8-4-2-17-2-21-1m-66%208c-2%200-8%205-14%2010l-11%208c-2%200-1%203%201%204%204%204-6%2019-20%2031-7%206-6%206%201%201%2010-7%2019-18%2022-26l4-4c9-4%2025-14%2026-16%203-4%202-5%200-8-3-2-5-3-9%200m115%2012c-11%202-17%2011-16%2027%200%2016%203%2023%2015%2025%2010%202%2019-1%2019-7-1-3%200-3-9-1-9%201-13-4-14-16-1-16%206-23%2018-19%204%202%206%200%206-4s-11-7-19-5m73%200c-11%202-15%206-12%2010%202%202%202%202%208%200%2010-3%2013-2%2012%207%200%203-1%203-5%204-10%200-17%206-19%2013-2%2010%204%2018%2014%2018l8-1h14c2-1%203-5%201-7-2-1-2-4-2-19%200-22-1-24-12-25h-7m45%201c-4%201-6%202-8%201h-4c-2%202-2%202-2%2036l1%2034%205%201h5v-21h5c10%202%2018-3%2022-12%203-5%204-22%202-28-4-11-14-15-26-11m-79%200c-2%201-4%202-5%201h-5l-2%201v49l4-1%206-1%201-20c0-20%200-20%208-20%206%200%207-1%207-6%200-4-7-6-14-3m113%200c-2%202%200%207%2011%2040l3%208-2%205c-2%208-4%2010-9%2010-3%200-6%202-6%204s5%204%209%204c10%200%2016-11%2028-53%205-17%205-18%201-19-6-1-7%201-10%2014-5%2020-5%2020-6%2018l-4-14c-5-17-5-18-9-18l-6%201m-32%208c-5%202-5%204-5%2018%200%2015%201%2017%207%2017%207%200%2011-8%2011-20%200-13-6-19-13-15m-49%2022c-6%206-3%2014%204%2013%205-1%206-3%206-10v-6h-4l-6%203'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":3.1914893617021276,"src":"/static/dfe248c801b1b9a04291884de95508bc/6862f/scrapylogo.png","srcSet":"/static/dfe248c801b1b9a04291884de95508bc/6d161/scrapylogo.png 150w,\n/static/dfe248c801b1b9a04291884de95508bc/630fb/scrapylogo.png 300w,\n/static/dfe248c801b1b9a04291884de95508bc/6862f/scrapylogo.png 322w","sizes":"(max-width: 322px) 100vw, 322px"}}}}}},{"node":{"frontmatter":{"path":"blog/koa-booster","title":"Koa-booster 文档介绍","tags":["nodejs"],"excerpt":"让Koa变得更简单","cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='288'%20viewBox='0%200%20400%20288'%20preserveAspectRatio='none'%3e%3cpath%20d='M190%20103c-4%201-13%209-15%2011-2%203-1%2051%201%2054%202%202%2021%208%2026%208%204%200%209-3%2011-5l3-2%205-3%203-3v-26l-1-27-27-9-6%202m2%2075l-10%205c-6%205-7%205-7%2010-1%206-1%206%2013%209%2015%204%2018%204%2028-2l8-4v-5c0-5%200-6-3-8-6-4-21-6-29-5'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.3888888888888888,"src":"/static/9757369cb7d5b643993b7f059d41e2c1/4fe8c/placeholder.jpg","srcSet":"/static/9757369cb7d5b643993b7f059d41e2c1/aabdf/placeholder.jpg 150w,\n/static/9757369cb7d5b643993b7f059d41e2c1/9dc27/placeholder.jpg 300w,\n/static/9757369cb7d5b643993b7f059d41e2c1/4fe8c/placeholder.jpg 600w,\n/static/9757369cb7d5b643993b7f059d41e2c1/9842e/placeholder.jpg 900w,\n/static/9757369cb7d5b643993b7f059d41e2c1/47498/placeholder.jpg 1200w,\n/static/9757369cb7d5b643993b7f059d41e2c1/7f945/placeholder.jpg 1440w","sizes":"(max-width: 600px) 100vw, 600px"}}}}}},{"node":{"frontmatter":{"path":"blog/good-practise-sync-code","title":"商品码同步实战总结","tags":["nodejs"],"excerpt":"项目总结","cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='288'%20viewBox='0%200%20400%20288'%20preserveAspectRatio='none'%3e%3cpath%20d='M190%20103c-4%201-13%209-15%2011-2%203-1%2051%201%2054%202%202%2021%208%2026%208%204%200%209-3%2011-5l3-2%205-3%203-3v-26l-1-27-27-9-6%202m2%2075l-10%205c-6%205-7%205-7%2010-1%206-1%206%2013%209%2015%204%2018%204%2028-2l8-4v-5c0-5%200-6-3-8-6-4-21-6-29-5'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.3888888888888888,"src":"/static/9757369cb7d5b643993b7f059d41e2c1/4fe8c/placeholder.jpg","srcSet":"/static/9757369cb7d5b643993b7f059d41e2c1/aabdf/placeholder.jpg 150w,\n/static/9757369cb7d5b643993b7f059d41e2c1/9dc27/placeholder.jpg 300w,\n/static/9757369cb7d5b643993b7f059d41e2c1/4fe8c/placeholder.jpg 600w,\n/static/9757369cb7d5b643993b7f059d41e2c1/9842e/placeholder.jpg 900w,\n/static/9757369cb7d5b643993b7f059d41e2c1/47498/placeholder.jpg 1200w,\n/static/9757369cb7d5b643993b7f059d41e2c1/7f945/placeholder.jpg 1440w","sizes":"(max-width: 600px) 100vw, 600px"}}}}}},{"node":{"frontmatter":{"path":"blog/reading-about-casl","title":"了解CASL后关于权限的思考","tags":["abac"],"excerpt":"一个基于属性的访问控制模块","cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='288'%20viewBox='0%200%20400%20288'%20preserveAspectRatio='none'%3e%3cpath%20d='M190%20103c-4%201-13%209-15%2011-2%203-1%2051%201%2054%202%202%2021%208%2026%208%204%200%209-3%2011-5l3-2%205-3%203-3v-26l-1-27-27-9-6%202m2%2075l-10%205c-6%205-7%205-7%2010-1%206-1%206%2013%209%2015%204%2018%204%2028-2l8-4v-5c0-5%200-6-3-8-6-4-21-6-29-5'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.3888888888888888,"src":"/static/9757369cb7d5b643993b7f059d41e2c1/4fe8c/placeholder.jpg","srcSet":"/static/9757369cb7d5b643993b7f059d41e2c1/aabdf/placeholder.jpg 150w,\n/static/9757369cb7d5b643993b7f059d41e2c1/9dc27/placeholder.jpg 300w,\n/static/9757369cb7d5b643993b7f059d41e2c1/4fe8c/placeholder.jpg 600w,\n/static/9757369cb7d5b643993b7f059d41e2c1/9842e/placeholder.jpg 900w,\n/static/9757369cb7d5b643993b7f059d41e2c1/47498/placeholder.jpg 1200w,\n/static/9757369cb7d5b643993b7f059d41e2c1/7f945/placeholder.jpg 1440w","sizes":"(max-width: 600px) 100vw, 600px"}}}}}},{"node":{"frontmatter":{"path":"blog/markdown-in-react","title":"Markdown in React","tags":["reactjs"],"excerpt":"记录点滴: react-markdown是一款非常优秀的markdown转html的react组件，但是官方文档是全英文而且也没有说明的太详细，把开发遇到的问题以及实践方法记录下来。","cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='288'%20viewBox='0%200%20400%20288'%20preserveAspectRatio='none'%3e%3cpath%20d='M190%20103c-4%201-13%209-15%2011-2%203-1%2051%201%2054%202%202%2021%208%2026%208%204%200%209-3%2011-5l3-2%205-3%203-3v-26l-1-27-27-9-6%202m2%2075l-10%205c-6%205-7%205-7%2010-1%206-1%206%2013%209%2015%204%2018%204%2028-2l8-4v-5c0-5%200-6-3-8-6-4-21-6-29-5'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.3888888888888888,"src":"/static/9757369cb7d5b643993b7f059d41e2c1/4fe8c/placeholder.jpg","srcSet":"/static/9757369cb7d5b643993b7f059d41e2c1/aabdf/placeholder.jpg 150w,\n/static/9757369cb7d5b643993b7f059d41e2c1/9dc27/placeholder.jpg 300w,\n/static/9757369cb7d5b643993b7f059d41e2c1/4fe8c/placeholder.jpg 600w,\n/static/9757369cb7d5b643993b7f059d41e2c1/9842e/placeholder.jpg 900w,\n/static/9757369cb7d5b643993b7f059d41e2c1/47498/placeholder.jpg 1200w,\n/static/9757369cb7d5b643993b7f059d41e2c1/7f945/placeholder.jpg 1440w","sizes":"(max-width: 600px) 100vw, 600px"}}}}}},{"node":{"frontmatter":{"path":"blog/BI-Data-Visualization","title":"BI数据可视化","tags":["nodejs"],"excerpt":"项目总结","cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='288'%20viewBox='0%200%20400%20288'%20preserveAspectRatio='none'%3e%3cpath%20d='M190%20103c-4%201-13%209-15%2011-2%203-1%2051%201%2054%202%202%2021%208%2026%208%204%200%209-3%2011-5l3-2%205-3%203-3v-26l-1-27-27-9-6%202m2%2075l-10%205c-6%205-7%205-7%2010-1%206-1%206%2013%209%2015%204%2018%204%2028-2l8-4v-5c0-5%200-6-3-8-6-4-21-6-29-5'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.3888888888888888,"src":"/static/9757369cb7d5b643993b7f059d41e2c1/4fe8c/placeholder.jpg","srcSet":"/static/9757369cb7d5b643993b7f059d41e2c1/aabdf/placeholder.jpg 150w,\n/static/9757369cb7d5b643993b7f059d41e2c1/9dc27/placeholder.jpg 300w,\n/static/9757369cb7d5b643993b7f059d41e2c1/4fe8c/placeholder.jpg 600w,\n/static/9757369cb7d5b643993b7f059d41e2c1/9842e/placeholder.jpg 900w,\n/static/9757369cb7d5b643993b7f059d41e2c1/47498/placeholder.jpg 1200w,\n/static/9757369cb7d5b643993b7f059d41e2c1/7f945/placeholder.jpg 1440w","sizes":"(max-width: 600px) 100vw, 600px"}}}}}},{"node":{"frontmatter":{"path":"blog/happy-talk-about-react-redux","title":"细说React-Redux","tags":["reactjs"],"excerpt":"记录点滴: 从redux过度到了react-redux。记录下相关的有趣的一些点。","cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='288'%20viewBox='0%200%20400%20288'%20preserveAspectRatio='none'%3e%3cpath%20d='M190%20103c-4%201-13%209-15%2011-2%203-1%2051%201%2054%202%202%2021%208%2026%208%204%200%209-3%2011-5l3-2%205-3%203-3v-26l-1-27-27-9-6%202m2%2075l-10%205c-6%205-7%205-7%2010-1%206-1%206%2013%209%2015%204%2018%204%2028-2l8-4v-5c0-5%200-6-3-8-6-4-21-6-29-5'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.3888888888888888,"src":"/static/9757369cb7d5b643993b7f059d41e2c1/4fe8c/placeholder.jpg","srcSet":"/static/9757369cb7d5b643993b7f059d41e2c1/aabdf/placeholder.jpg 150w,\n/static/9757369cb7d5b643993b7f059d41e2c1/9dc27/placeholder.jpg 300w,\n/static/9757369cb7d5b643993b7f059d41e2c1/4fe8c/placeholder.jpg 600w,\n/static/9757369cb7d5b643993b7f059d41e2c1/9842e/placeholder.jpg 900w,\n/static/9757369cb7d5b643993b7f059d41e2c1/47498/placeholder.jpg 1200w,\n/static/9757369cb7d5b643993b7f059d41e2c1/7f945/placeholder.jpg 1440w","sizes":"(max-width: 600px) 100vw, 600px"}}}}}}]}},"pageContext":{"postPath":"blog/elegant-nodejs-server","translations":[{"hreflang":"en","path":"/blog/elegant-nodejs-server"}]}},"staticQueryHashes":["4097791827"]}